# Задача №31. Решение в группах Последовательностью Фибоначчи называется
# последовательность чисел a0 , a1 , ..., an , ..., где a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
#
def fib(n):
    if n in [1, 2]:
        return 1
    return fib(n-1) + fib(n-2)
n = int(input('Fib N: '))
print(fib(n+1))

# Задача №33. Решение в группах Хакер Василий получил доступ к классному журналу
# и хочет заменить все свои минимальные оценки на максимальные. Напишите программу,
# которая заменяет оценки Василия, но наоборот: все максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4 Output: 1 3 3 3 1

n = int(input('Enter range: '))
a = []
max = 1
min = 5
for i in range(n):
    a.append(input())
    if int(a[i]) > max:
        max = int(a[i])
    if int(a[i]) < min:
        min = int(a[i])
print(a, max, min)
for i in range(len(a)):
    if int(a[i]) == max:
        a[i] = min
print(a)

# Задача №35. Решение в группах Напишите функцию, которая принимает одно число и проверяет,
# является ли оно простым
# Напоминание:
# Простое число - это число, которое имеет 2 делителя: 1  и n(само число) Input: 5 Output: yes
#
# def check(n):
#     nn = int(n ** 0.5)
#     for i in range(2, nn):
#         if n % i == 0:
#             return 'No'
#     return 'Yes'
# n = int(input('Enter N: '))
# print(check(n))

# Задача №37. Решение в группах 15 минут Дано натуральное число N и последовательность из N элементов.
# Требуется вывести эту последовательность в обратном порядке. Примечание.
# В программе запрещается объявлять массивы и использовать циклы (даже для ввода и вывода).
# Input:    2 -> 3 4 Output: 4 3

# n = int(input('Enter N: '))
n = [2, 3, 4, 5, 6]
print(n)
print(n[::-1])
m = list(reversed(n))
print(m)
